
/**
 * Created by annayushina on 18/12/16.
 */

import java.io.File

fun main(args: Array<String>){
    val input: List<String> = File("src/advent_8.txt").readLines().filter { it.isNotBlank() }
    var listPoints: MutableList<MyPoint> = mutableListOf()
    for (y in 0..5){
        for (x in 0..49){
            listPoints.add(MyPoint(x, y, false))
        }
    }
    println( listPoints.lastIndex)

    fun action (string: String){
        if (string.startsWith("rect")){
            val x = string.substring(5, 6).toInt()
            val y = string.takeLast(1).toInt()
            for (i in 0..y) {
                for (j in 0..250 step 50) {
                   listPoints.map {
                        if  (it.x in j..(j + x))
                        it.vkl = true
                    }
                }
            }
    
        }
        else if (string.startsWith("rotate row")){
            val y = string.substring(13, 14).toInt()
            val distance = string.takeLast(2).trim().toInt()
            val rowStart = 50*y
            for (pointNumber in rowStart..rowStart+49){

                    if (pointNumber + distance <= rowStart+49 && listPoints[pointNumber].vkl  ){
                        listPoints[pointNumber+distance].vkl = listPoints[pointNumber].vkl
                        listPoints[pointNumber].vkl = false
                    }

                else if (pointNumber + distance > rowStart+49 && listPoints[pointNumber].vkl  ){
                    listPoints[-rowStart-49+pointNumber+distance].vkl = listPoints[pointNumber].vkl
                        listPoints[pointNumber].vkl = false
                }



            }

        }
        else if (string.startsWith("rotate column")){
            val column = string.substring(16, 18).trim().toInt()
            val distance = string.takeLast(2).trim().toInt()
            for (pointNumber in column..299 step 50){
                if (listPoints[pointNumber].vkl && column+50*distance <=299 ){
                    listPoints[column+50*distance].vkl==true
                    listPoints[pointNumber].vkl = false
                }
                else if (listPoints[pointNumber].vkl && column+50*distance > 299){
                    listPoints[column-50*distance].vkl==true
                    listPoints[pointNumber].vkl = false
                }
            }


            for (pointNumber in column..column+50 step 50){

            }



        }
    }

   for (string in input){
       action(string)
   }
    print(listPoints.count { it.vkl })
}

data class MyPoint (val x: Int, val y: Int, var vkl: Boolean)
